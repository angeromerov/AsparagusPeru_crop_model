# -*- coding: utf-8 -*-
"""
Created on Tue Nov  3 15:23:17 2020

@author: Angelela Romero Vergel
"""

import pandas as pd
import numpy as np
import math



df = pd.read_excel(r"C:\Users\Angelita\Documents\Python Scripts\aspmodel pyton\MetDanper.xlsx")
df = df.set_index(['date'])# set date values to extract range of data for each campaing
plotdates = pd.read_excel(r"C:\Users\Angelita\Documents\Python Scripts\plotsDATES.xlsx")

#for i in range(len(plotdata)):
#    plotdates=plotdata.loc[i:i]  # for read data frame row by row
    
#S=10 #plot to run in "plotDATES" file for indexPy
#plot=plotdates['plot'].iloc[S]+ ' '+ plotdates['region'].iloc[S]
    
RModel=[]
RModel.append(plot)
RsModel=pd.DataFrame(data=RModel)
RsModel.rename(columns = {0:'plot'}, inplace = True)
RsModel['indexPy'] = plotdates['indexPy'].iloc[S]
RsModel['Harvest time'] = plotdates['season'].iloc[S]


#2. Campaign key dates setting

Brixini=plotdates['Brixini'].iloc[S]
start_campaing = plotdates['iniCrop'].iloc[S]
chapodo= plotdates['chapodo'].iloc[S]
end_harvest=  plotdates['endHarvest'].iloc[S]
nextchapodo=  plotdates['nextChapodo'].iloc[S]

start_campaing = start_campaing.strftime('%Y-%m-%d')
chapodo= chapodo.strftime('%Y-%m-%d')
end_harvest=  end_harvest.strftime('%Y-%m-%d')
nextchapodo= nextchapodo.strftime('%Y-%m-%d')

campaign = df.loc[start_campaing : end_harvest]
harvest= df.loc[chapodo : end_harvest]
harvest =  harvest.reset_index()

#Wilson model parameters 
Tb = 7.1 # Temperature base for asparagus
D = 10  #depth of roots cm (D) Peru

#Yield and CHO parameters
Cperu = 0.0344 # growth rate spears Peru
L_harvest = 22;  #above ground length of spear at harvest 
Lbase = 1;#assumed length of bud at start of growth, cm (guess) (Ls)
C=0.022 # Wilson, 1999 growth rate
frecuencia = 6 #days to growth another spear

#SPEAR GROWTH
Large=[]
x=0                                                 #define initial point for start to calculate thermal time
for row in harvest:
     ttspear= harvest.Tave.loc[x+1: len(harvest)-1] #define range of date to calculate thermal time
     ttspear=(ttspear.cumsum())-Tb                  # calculate thermal time
     for index, value in ttspear.items():           # Then calculate for each row Wilso equation
       ctt= (value)*Cperu
       #L = ((Lbase+D)**(ctt))-D
       L = ((1.8786)**(ctt))-D
       if L< L_harvest+10:                          # Putting as limit the lenght to harvest the spears
           M= [L,index]                             # Taking lenght calculated and it´s correspondent index in harvest range
           Large.append(M)                          # Saving  lenght values (cm) per day
       else :
           x=M[-1]-frecuencia                                # Setting the initial day for next spears group growing
           Non=[np.nan,index]                       # Putting zeros when lengh is bigger than the harvested lengh
           Large.append(Non)                        # Divide matrix to plot separate lines representing ten spears growing
           
           
           


#BRIX INITIAL CONVERTIION
#CHO g initial calculation from Brix

drymassiniroot=1.59 * Brixini +12.88; # dry mass #it is not g from results field Danper
Rootbiomass =750; #g Wilson 2002
CHOstart0=21.3*Brixini+16.8 #mg per g of dry mass perplant medium crop storage CHO roots CHOstart Wilson2005
CHOstart = (CHOstart0/1000)*Rootbiomass # pass mg to g

#SPEAR BIOMASS
fwm=0.91187543 #coefficient to convert volume to fwt ditto arquimedes method
f2dw=0.09 #fresh wt to dry wt conversion spears , dry mass peru % 
conv_effi=0.7 #efficiency of conversion of stored cho to spear dry wt wilson

Numbersp = len(ttspear)
vol0= (L_harvest* math.pi *0.4**2)*0.04
vol1= (L_harvest*math.pi *0.6**2)*0.25 #standar diameter 12 but radius in cm
vol2= (L_harvest*math.pi *0.8**2)*0.28 #large diameter 16 but radius in cm
vol3= (L_harvest*math.pi *1**2)*0.17
vol4= (L_harvest*math.pi *1.3**2)*0.0386
#22% losses
lspearok= (0.05+0.26+0.30+0.18+0.0386)# % good spears
lose= 1- lspearok

vol= (vol0+vol1+vol2+vol3+vol4)*Numbersp
vol= vol + (vol*lose) # plus descarte
freshWto=(round((vol*fwm),2))#*0.7# just for summer campaings put 0.5 %
dryW=freshWto*f2dw # dry mass spear g /plant
CHOused= dryW/conv_effi
wsendh=CHOstart-CHOused
BrixendH= (wsendh - 16.8)/21.3 #brix to mg per g of dry weight
BrixendH= round(BrixendH,2)
freshWok= freshWto
Yprod= round((freshWok*30000)/1000, 2)
Yprodok = round((Yprod*0.77), 2)

#Number of spears per quality
D_small = (freshWto *0.04)/5.7  # 5.7 gr average per spear
D_small = round(D_small, 0)    
D_standar = (freshWto *0.25)/8.5
D_standar = round(D_standar, 0)
D_large = (freshWto *0.28)/30
D_large = round(D_large, 0)
D_xlarge = (freshWto *0.17)/38
D_xlarge =round(D_xlarge, 0)
D_xxlarge = (freshWto *0.0386)/45
D_xxlarge = round(D_xxlarge, 0)
D_numTosp = D_small+ D_standar + D_large+ D_xlarge + D_xxlarge
numperline= round((D_numTosp/Numbersp),0)


#yield of spears per quality
Y_small = Yprod*0.04 /1000
Y_standar = Yprod*0.25 /1000
Y_large = Yprod*0.28/1000
Y_xlarge = Yprod*0.17/1000
Y_xxlarge = Yprod*0.0386/1000
Y_todiameters= Y_small+ Y_standar+ Y_large+Y_xlarge+Y_xxlarge



     
#STEM GROWTH
#2. Campaign key dates setting
#calculate date when opening phase date +20 days after end harvest
from datetime import datetime
opening= datetime.strptime(end_harvest, "%Y-%m-%d")
import datetime
opening = opening + datetime.timedelta(days=20)
from datetime import datetime
opening = opening.strftime ("%Y-%m-%d")
L_stem = 120 # cm
sootsTo= df.loc[chapodo: opening]
sootsTo = sootsTo.reset_index()
#ttstem= sootsTo.Tave.loc[0: len(sootsTo)-1] 
#ttstem222=(ttstem.cumsum())-Tb 

shootmax=[]
Shoots=[]
x=M[-1]-frecuencia  
#while x < len(sootsTo):
#    x = x+1
for row in sootsTo:
    ttstem= sootsTo.Tave.loc[x+1: len(sootsTo)-1]
    #ttspear= sootsTo.Tave.loc[x+1: ] #define range of date to calculate thermal time
    #x=x+2
    ttstem=(ttstem.cumsum())-Tb  
    #x=x+2               
    for index, value in ttstem.items():           # Then calculate for each row Wilso equation
       ctt= (value)*Cperu              #L = ((Lbase+D)**(ctt))-D
       L = ((1.8786)**(ctt))-D
       if L< L_stem+10:                          
           B= [L,index]                             
           Shoots.append(B) 
           x=B[-1]-8
       if L> L_stem+10: 
           Non=[np.nan,index]                       
           Shoots.append(Non) 
       if x> len(sootsTo):
           Non=[np.nan,index]                       
           Shoots.append(Non) 
           break
    shootmax.append(Shoots[-1])
    Shoots.append(Non)
       
shoot=pd.DataFrame(data=Shoots)                 #Transform "Large" serie to data frame.
shoot.columns=['cm', 'indexinHeight']         #Put names of data frame.
shoot['indexinHeight'].astype(float)          #Convert to numbers
lastindex=pd.isnull(shoot).any(1).to_numpy().nonzero()[0]
      
#shootmax=pd.DataFrame(data=shootmax)  
#shootmax=shootmax.dropna()  
  
#STEAM BIOMASS
fwm=0.91187543 #coefficient to convert volume to fwt ditto arquimedes method
f2dw=0.09 #fresh wt to dry wt conversion spears , dry mass peru % 
conv_effi=0.7 #efficiency of conversion of stored cho to spear dry wt wilson

Numberstem = len(shootmax)
vol5= (L_stem*math.pi*0.6**2)*(1/3)
#vol6= (L_stem*math.pi *1.3**2)*0.5
vol= vol5*Numberstem 
freshWstem=vol*fwm #g
dryWstem=freshWstem*0.18 # dry mass spear g /plant
CHOstem= dryWstem/conv_effi
wsstem=CHOstart-CHOused-CHOstem
Brixmin= (wsstem-16.8)/21.3#brix to mg per g of dry weight
Brixmin= round(Brixmin,2)

#CHO RECOVER
extcoef= 0.6 # Beers law extinction coefficient Wilson2002
plantm2 = 3
par2mj = 1.5 # g of biomass per MJ of radiation intercepted
CHOr= df.Tave.loc[end_harvest: nextchapodo]
Mj= df.Mjm2day.loc[end_harvest: nextchapodo]
ttLAI=(CHOr.cumsum())
#ecuation from "days degrees" file LAI from fieldwork
LAI1= -2e-06*(ttLAI**2)
LAI2= 0.0072*ttLAI - 0.7098
LAI=(LAI1+LAI2) 
fpar1= extcoef*LAI # radiation intercepted
#fpar1=pd.DataFrame(data=fpar1) 
#fpar1= fpar1.Tave.loc[opening: nextchapodo]

#Interceptance of incident radiation by the canopy is WIlson 2002
#calculated using Beer’s Law, assuming a canopy attenuation coefficient of 0.6 (Monteith,1973)
# There are some Empirical formula to calculate PAR from solar radiation (Rg) osea Mj,
# for example the simplest one as follows:
#PAR= a*Rg Where, a is the slope/regression constant between 0.44~0.52 in most research, 
#and usually use 0.47. 
fpar= 0.46*fpar1 # slope Xue-Hai Fei 0.47 to obtein PAR
#fpar= 1-1e-fpar1
#biomass=((fpar*Mj*par2mj)/plantm2)*0.7 # Wilson2005 CHO/ plant
biomass=(1/plantm2)*conv_effi*fpar*Mj/par2mj
biomass= biomass*0.9 # 90% translocation
wscin=biomass.cumsum()
CHOfoto = max(wscin)
Brixfoto= round(((CHOfoto-16.8)/21.3))# 90% is translocated to roots
BrixendC= Brixfoto + Brixmin 
BrixendC= BrixendC*0.15# maintemance respitration 0.15 root maintenannce WIlson2005
BrixendC= round(BrixendC,2)
